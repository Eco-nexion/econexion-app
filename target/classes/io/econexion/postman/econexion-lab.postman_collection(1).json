{
  "info": {
    "name": "Econexion Lab – CRUD Users",
    "_postman_id": "econexion-lab-crud-users",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection to test the in-memory CRUD API. Uses {{baseUrl}} and saves {{userId}} after Create."
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Root (GET /)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            ""
          ]
        }
      }
    },
    {
      "name": "List users (GET /lab/users)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/lab/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "lab",
            "users"
          ]
        }
      }
    },
    {
      "name": "Create user (POST /lab/users) – saves {{userId}}",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Ada Lovelace\", \"email\": \"ada@demo.test\"}"
        },
        "url": {
          "raw": "{{baseUrl}}/lab/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "lab",
            "users"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "const json = pm.response.json();",
              "if (json && json.id) {",
              "  pm.collectionVariables.set('userId', json.id);",
              "  console.log('Saved userId:', json.id);",
              "}",
              "pm.test('Status 200/201', () => pm.expect(pm.response.code).to.be.oneOf([200,201]));"
            ]
          }
        }
      ]
    },
    {
      "name": "Get user by id (GET /lab/users/{{userId}})",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/lab/users/{{userId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "lab",
            "users",
            "{{userId}}"
          ]
        }
      }
    },
    {
      "name": "Update user (PUT /lab/users/{{userId}})",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Ada L.\", \"email\": \"ada@demo.test\"}"
        },
        "url": {
          "raw": "{{baseUrl}}/lab/users/{{userId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "lab",
            "users",
            "{{userId}}"
          ]
        }
      }
    },
    {
      "name": "Delete user (DELETE /lab/users/{{userId}})",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/lab/users/{{userId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "lab",
            "users",
            "{{userId}}"
          ]
        }
      }
    }
  ]
}